for curScaredTime in curScaredTimes:
        if (curScaredTime != 0):
            powerFlags.append(True)
        else:
            powerFlags.append(False)

    # distance to ghost
    i = 0
    for powerflag in powerFlags:
        # once eat a capture, try to eat ghost~
        if (powerflag):
            scaredGhostList = [scaredGhost for scaredGhost in curScaredTimes if (scaredGhost != 0)]
            score += 500 * eatAdot * (len(curScaredTimes) - len(scaredGhostList)) 
            # praise for eating a scared ghost
            if (manhattanDistance(curPos, curGhostPos[i]) < curScaredTimes[i]):
                if (manhattanDistance(curPos, curGhostPos[i]) <= 1):
                    score += 200 * eatAdot
                elif (manhattanDistance(curPos, curGhostPos[i]) == 2):
                    score += 20 * eatAdot
                else:
                    score += 20 / manhattanDistance(curPos, curGhostPos[i]) * eatAdot
        else:
            if (manhattanDistance(curPos, curGhostPos[i]) <= 1):
                score -= 1000 * eatAdot
            elif (manhattanDistance(curPos, curGhostPos[i]) == 2):
                score -= 10 * eatAdot
            else:
                score -= 1 / manhattanDistance(curPos, curGhostPos[i]) * eatAdot
        i += 1

    # distance to food
    score -= eatAdot * len(curFoodList) # penalize for more food it lefts
    for food in curFoodList:
        if (manhattanDistance(curPos, food) <= 1):
            score += eatAdot
        else:
            score += 1 / manhattanDistance(curPos, food) * eatAdot

    # distance to capsules
    score -= 500 * eatAdot * len(curCapsules) # penalize for captures it lefts
    for curCapsule in curCapsules:
        if (manhattanDistance(curPos, curCapsule) <= 1):
            score += 100 * eatAdot
        elif (manhattanDistance(curPos, curCapsule) == 1):
            score += 10 * eatAdot
        else:
            score += 10 / manhattanDistance(curPos, curCapsule) * eatAdot

    # --- specification handling --- #
    
    # reward for ending the game for several foods left
    if (len(curFoodList) <= 3):
        for food in curFoodList:
            if (manhattanDistance(curPos, food) <= 1):
                score += 100 * eatAdot
            else:
                score += 5 / manhattanDistance(curPos, food) * eatAdot

    return score + scoreEvaluationFunction(currentGameState)